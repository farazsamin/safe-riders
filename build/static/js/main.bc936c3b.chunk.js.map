{"version":3,"sources":["components/DestinationCard/DestinationCard.js","components/Home/Home.js","components/Login/firebase.config.js","components/Login/Login.js","components/Map/GoogleMap.js","components/Book/Book.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["DestinationCard","props","history","useHistory","name","img","className","src","alt","onClick","push","handlebook","Home","useState","travel","settravel","useEffect","data","map","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","app","initializeApp","Login","useContext","UserContext","setLoggedInUser","provider","auth","GoogleAuthProvider","FacebookAuthProvider","from","useLocation","state","pathname","newUser","setNewUser","password","setPassword","confirmPassword","setconfirmPassword","email","error","ok","success","user","setUser","handleBlur","e","isFormValid","isPassword","isConfirmPassword","target","test","value","console","log","signInWithEmailAndPassword","then","userCredential","replace","catch","message","onSubmit","createUserWithEmailAndPassword","preventDefault","type","onChange","id","htmlFor","placeholder","onBlur","required","signInWithPopup","result","displayName","code","credential","icon","faGoogle","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","setState","onMapClicked","google","this","visible","Component","GoogleApiWrapper","Book","setImg","click","setClick","useParams","vehicleImg","allData","filter","min","max","faUserFriends","Header","loggedInUser","class","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","PrivateRoute","children","rest","render","location","createContext","App","Provider","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc936c3b.chunk.js","sourcesContent":["import { useHistory } from 'react-router';\n\nconst DestinationCard = (props) => {\n    const history = useHistory();\n    const {name,img} =props.name;\n    const handlebook=(name)=>{\n        history.push(`/destination/${name}`) \n    }\n    return (\n        <div className=\"col-md-3\">\n             <div className=\"card text-center\">\n             <img className=\"mx-auto w-50 p-2\" src={img} alt=\"Card  cap\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{name}</h5>\n                    <button className=\"btn btn-primary\" onClick={()=>handlebook(name)}>Book now</button>\n                </div>\n             </div>\n        </div>\n    );\n};\n\nexport default DestinationCard;","import React, { useEffect, useState } from 'react';\nimport data from '../Data/data.json'\nimport DestinationCard from '../DestinationCard/DestinationCard';\nimport './Home.css'\nconst Home = () => {\n    const [travel, settravel] = useState([]);\n    useEffect(() => {\n        settravel(data)\n    }, [])\n    return (\n        <div className=\"row mt-5 pt-5\">\n             {travel.map(name => <DestinationCard name={name}></DestinationCard>)}\n        </div>\n      \n    );\n};\n\nexport default Home;","const firebaseConfig = {\n  apiKey: \"AIzaSyBse9rpeBoEBEjwacnjLii_8rpU5sSMwMI\",\n  authDomain: \"safe-riders-f3567.firebaseapp.com\",\n  projectId: \"safe-riders-f3567\",\n  storageBucket: \"safe-riders-f3567.appspot.com\",\n  messagingSenderId: \"555505862178\",\n  appId: \"1:555505862178:web:f07cfdcf1bf42b834e6c7b\"\n};\nexport default firebaseConfig;","import React, { useContext } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport  { useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport {UserContext} from '../../App' \nimport { useHistory, useLocation } from 'react-router';\nimport './Login.css'\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\n\n\n//firebase initialize\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nfunction Login() {\n  //context\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext)\n\n  //google and fb provider\n  var provider = new firebase.auth.GoogleAuthProvider();\n  var fbProvider = new firebase.auth.FacebookAuthProvider();\n\n  //history and location hooks\n  let history = useHistory();\n  let location = useLocation();\n  const  { from } = location.state || { from: { pathname: \"/\" } };\n\n  //email and pass login\n  const [newUser, setNewUser] = useState(false)\n  const [password, setPassword] = useState(0);\n  const [confirmPassword, setconfirmPassword] = useState(1)\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error : '',\n    ok : '',\n    success : false\n  })\n\n  //email and password valiadation\n  const handleBlur = (e) => {\n    let isFormValid,isPassword,isConfirmPassword;\n    if (e.target.name === 'email') {\n      isFormValid = /\\S+@\\S+\\.\\S+/.test(e.target.value)\n    }\n    if (e.target.name === 'password') {\n      isFormValid = e.target.value.length > 6; \n      isPassword = e.target.value;\n      setPassword(isPassword);\n    }\n    if(e.target.name=== 'confirm_password'){\n      isConfirmPassword = e.target.value;\n      setconfirmPassword(isConfirmPassword);\n    }\n    console.log(password,confirmPassword)\n    if(newUser && password !== confirmPassword){\n      user['error'] = \"Password Doesn't Match\"\n      user['ok'] = ''\n    }\n    if(newUser && password === confirmPassword){\n      user['ok'] = \"Password Matched\"\n      user['error'] = ''\n    }\n   \n    if (isFormValid ) {\n      const newUser = { ...user };\n      newUser[e.target.name] = e.target.value;\n      setUser(newUser);\n    }\n  }\n\n  //signup method\n  const handleSubmit = (e) => {\n    if (newUser && user.email && user.password) {\n      firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n      .then((userCredential) => {\n        // Signed in \n        const newUser = {...user};\n        newUser.error = '';\n        newUser.success = true;\n        setUser(newUser)\n        // ...\n      })\n      .catch((error) => {\n        const newUser = {...user};\n        newUser.error = error.message;\n        newUser.success = false;\n        setUser(newUser)\n        // ..\n      });\n    }\n    e.preventDefault();\n  }\n\n  //sign in method\n  if(!newUser && user.email && user.password){\n    firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n  .then((userCredential) => {\n    // Signed in\n    var user = userCredential.user;\n    const newUser = {...user};\n    newUser.error = '';\n    newUser.success = true;\n    const {name,email} = newUser;\n    const signedInUser = {name : email, email};\n    setLoggedInUser(signedInUser);\n    setUser(newUser)\n    history.replace(from)\n    // ...\n  })\n  .catch((error) => {\n\n    const newUser = {...user};\n    newUser.error = error.message;\n    newUser.success = false;\n    setUser(newUser)\n  });\n  }\n\n  //google sign in\n  const handleSignIn = () => {\n    firebase.auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        const {displayName,email} = result.user;\n        const signedInUser = {name : displayName, email};\n        setLoggedInUser(signedInUser);\n        setUser(user);\n        history.replace(from)\n\n      }).catch((error) => {\n\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        var email = error.email;\n        var credential = error.credential;\n      });\n\n  }\n \n  \n  return (\n    <div className=\"text-center\">\n     \n     \n\n      <form onSubmit={handleSubmit}>\n        <input type=\"checkbox\" name=\"newUser\" onChange={()=>setNewUser(!newUser)} id=\"\"/>\n        <label htmlFor=\"newUser\"> Sign UP</label> <br/>\n        { newUser && <input type=\"text\" name=\"name\" id=\"\"placeholder=\"name\" /> } <br/>\n        <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder=\"email: \" required />\n        <br />\n        <input type=\"password\" name=\"password\" onBlur={handleBlur} id=\"\" placeholder=\"password\" required /> <br/>\n        { newUser && <input type=\"password\" name=\"confirm_password\" onBlur={handleBlur} id=\"\" placeholder=\"confirm password\" required />}\n        <br />\n        <input type=\"submit\" className=\"btn btn-success\" value=\"Submit\" />\n      </form>\n       <p>{user.error}</p>\n       <p>{user.ok}</p>\n       {\n         user.success && <p> user {newUser? 'Signup' : 'loggin'} Successfully</p>\n       }\n\n       <button className=\"btn btn-secondary pl-4 pr-4\" onClick={handleSignIn}><FontAwesomeIcon className=\"mr-3\" icon={faGoogle}></FontAwesomeIcon>Google Sign in</button> <br />\n  \n       \n    </div>\n  );\n}\n\nexport default Login;\n","import { Component } from \"react\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nexport class MapContainer extends Component {\n    state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n   \n    onMarkerClick = (props, marker, e) =>\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n   \n    onMapClicked = (props) => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        })\n      }\n    };\n   \n    render() {\n      return (\n        <div >\n        <Map google={this.props.google}\n        onClick={this.onMapClicked}>\n      <Marker onClick={this.onMarkerClick}\n              name={'Current location'} />\n\n      <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n      </InfoWindow>\n    </Map>\n    </div>\n        \n      )\n    }\n  }\n\n  export default GoogleApiWrapper({\n    apiKey: ('')\n  })(MapContainer)\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport allData from '../Data/data.json'\nimport Map from '../Map/GoogleMap';\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faUserFriends } from '@fortawesome/free-solid-svg-icons';\n\nconst Book = () => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\n    const [img, setImg] = useState({})\n    const [click, setClick] = useState(false)\n\n    const { type } = useParams();\n\n    useEffect(() => {\n        const matchedItem = allData.filter(data => data.name === type)\n        const vehicleImg = (matchedItem[0].img)\n        setImg(vehicleImg);\n    }, [img])\n\n\n\n\n    return (\n\n        <div className=\"row ml-5\">\n            <div className=\"col-md-4\">\n                <p>From</p>\n                <input className=\"form-control mb-3\" type=\"text\" placeholder=\"Your current location\" required />\n                <p>To</p>\n                <input className=\"form-control \" type=\"text\" placeholder=\"Where yo want to go\" required></input>\n                <p>Date</p>\n                <input type=\"date\" name=\"begin\"\n                    placeholder=\"dd-mm-yyyy\" value=\"\"\n                    min=\"2021-03-20\" max=\"2030-12-31\" required />\n\n\n                <button onClick={() => setClick(true)} className=\"btn btn-primary mt-3 d-block mb-5\">Search</button>\n                {\n\n                    click ?\n                        <div className=\"border border-secondary rounded p-5\">\n                            <div className=\"mb-5\"> <img src={img} className=\"w-25 d-inline\" alt=\"\" />\n                                <p className=\"d-inline ml-5\">2 <FontAwesomeIcon className=\"ml-3\" icon={faUserFriends}></FontAwesomeIcon></p>\n                                <h6 className=\"d-inline ml-5 pl-5\">Cost : $10</h6></div>\n\n                            <div> <img src={img} className=\"w-25 d-inline\" alt=\"\" />\n                                <p className=\"d-inline ml-5\">2 <FontAwesomeIcon className=\"ml-3\" icon={faUserFriends}></FontAwesomeIcon></p>\n                                <h6 className=\"d-inline ml-5 pl-5\">Cost : $20</h6></div>\n\n                        </div>\n\n                        : <div></div>\n\n                }\n\n            </div>\n\n            <div className=\"col-md-7\">\n                {\n                    click ? <Map></Map> : <div></div>\n                }\n\n            </div>\n\n\n\n        </div>\n    );\n};\n\nexport default Book;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport './Header.css';\nconst Header = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext)\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link to=\"/home\" class=\"navbar-brand\">Safe Riders</Link>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item active\">\n              <Link to=\"/home\" class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/home\" class=\"nav-link\" href=\"#\">Destination</Link>\n            </li>\n            <li class=\"nav-item\">\n              {\n                  loggedInUser.name? <p class=\"nav-link\">{loggedInUser.name}</p> : <Link to=\"/login\" class=\"nav-link\">Login</Link>\n              }\n              \n            </li>\n            \n          </ul>\n        </div>\n      </nav>\n    );\n};\n\nexport default Header;","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                loggedInUser.email ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;","import React, { createContext, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport Book from './components/Book/Book';\nimport Header from './components/Header/Header';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\n//context created\nexport const UserContext =  createContext();\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({})\n\n  return (\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n      <Router>\n          <Header/>\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <PrivateRoute path=\"/destination/:type\">\n              <Book />\n            </PrivateRoute>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n      </Router>\n      </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}